{"version":3,"file":"libertyware-ngx-form-material-design-widget.js","sources":["ng://@libertyware/ngx-form-material-design-widget/date-field.widget.ts","ng://@libertyware/ngx-form-material-design-widget/input-field.widget.ts","ng://@libertyware/ngx-form-material-design-widget/radio-field.widget.ts","ng://@libertyware/ngx-form-material-design-widget/textarea-field.widget.ts","ng://@libertyware/ngx-form-material-design-widget/material-form-widget.module.ts","ng://@libertyware/ngx-form-material-design-widget/widget-preset.ts","ng://@libertyware/ngx-form-material-design-widget/libertyware-ngx-form-material-design-widget.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FieldWidget } from '@libertyware/ngx-form-gen';\n\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'ngx-material-date-widget',\n  template: `\n    <div class=\"example-container\" [id]=\"fieldName + '-controls'\">\n      <mat-form-field>\n        <input\n          matInput\n          [matDatepicker]=\"picker\"\n          [placeholder]=\"formControl?.readableName\"\n        />\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n        <mat-hint>{{ hintText }}</mat-hint>\n        <mat-error *ngIf=\"group?.customValidateErrors | async as errors\">\n          <ng-container *ngFor=\"let error of errors[fieldName]; let i = index\">\n            <div>\n              {{ error }}\n            </div>\n          </ng-container>\n        </mat-error>\n      </mat-form-field>\n    </div>\n  `\n})\n// tslint:disable-next-line: component-class-suffix\nexport class NgxMaterialDateWidget extends FieldWidget {}\n","import { Component } from '@angular/core';\nimport { FieldWidget } from '@libertyware/ngx-form-gen';\n\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'ngx-material-input-widget',\n  template: `\n    <div class=\"example-container\" [id]=\"fieldName + '-controls'\">\n      <mat-form-field>\n        <input matInput [placeholder]=\"formControl?.readableName\" />\n        <mat-hint>{{ hintText }}</mat-hint>\n        <mat-error *ngIf=\"group?.customValidateErrors | async as errors\">\n          <ng-container *ngFor=\"let error of errors[fieldName]; let i = index\">\n            <div>\n              {{ error }}\n            </div>\n          </ng-container>\n        </mat-error>\n      </mat-form-field>\n    </div>\n  `\n})\n// tslint:disable-next-line: component-class-suffix\nexport class NgxMaterialInputWidget extends FieldWidget {}\n","import { Component } from '@angular/core';\nimport { FieldWidget } from '@libertyware/ngx-form-gen';\n\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'ngx-material-radio-widget',\n  template: `\n    <div class=\"example-container\" [id]=\"fieldName + '-controls'\">\n      <mat-form-field>\n        <mat-radio-group aria-label=\"Select an option\">\n          <mat-radio-button *ngFor=\"let radioOption of formControl.radioOptions; let i = index\" [value]=\"radioOption.value\">{{ radioOption.label }}</mat-radio-button>\n        </mat-radio-group>\n        <mat-hint>{{ hintText }}</mat-hint>\n        <mat-error *ngIf=\"group?.customValidateErrors | async as errors\">\n          <ng-container *ngFor=\"let error of errors[fieldName]; let i = index\">\n            <div>\n              {{ error }}\n            </div>\n          </ng-container>\n        </mat-error>\n      </mat-form-field>\n    </div>\n  `\n})\n// tslint:disable-next-line: component-class-suffix\nexport class NgxMaterialRadioWidget extends FieldWidget {}\n","import { Component } from '@angular/core';\nimport { FieldWidget } from '@libertyware/ngx-form-gen';\n\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'ngx-material-input-widget',\n  template: `\n    <div class=\"example-container\" [id]=\"fieldName + '-controls'\">\n      <mat-form-field>\n        <textarea matInput [placeholder]=\"formControl?.readableName\"></textarea>\n        <mat-hint>{{ hintText }}</mat-hint>\n        <mat-error *ngIf=\"group?.customValidateErrors | async as errors\">\n          <ng-container *ngFor=\"let error of errors[fieldName]; let i = index\">\n            <div>\n              {{ error }}\n            </div>\n          </ng-container>\n        </mat-error>\n      </mat-form-field>\n    </div>\n  `\n})\n// tslint:disable-next-line: component-class-suffix\nexport class NgxMaterialTextareaWidget extends FieldWidget {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { NgxMaterialDateWidget } from './date-field.widget';\nimport { NgxMaterialInputWidget } from './input-field.widget';\nimport { NgxMaterialRadioWidget } from './radio-field.widget';\nimport { NgxMaterialTextareaWidget } from './textarea-field.widget';\n\nconst widgets = [NgxMaterialDateWidget, NgxMaterialInputWidget, NgxMaterialRadioWidget, NgxMaterialTextareaWidget];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatDatepickerModule,\n    MatInputModule,\n    MatRadioModule,\n    MatNativeDateModule,\n    MatRippleModule\n  ],\n  exports: [...widgets],\n  declarations: [...widgets],\n  entryComponents: [...widgets]\n})\nexport class NgxMaterialFormModule {}\n","import { RenderOptions, FieldWidget } from '@libertyware/ngx-form-gen';\nimport { FieldType } from '@libertyware/ngx-form-core';\nimport { NgxMaterialInputWidget } from './input-field.widget';\nimport { NgxMaterialDateWidget } from './date-field.widget';\nimport { NgxMaterialRadioWidget } from './radio-field.widget';\nimport { NgxMaterialTextareaWidget } from './textarea-field.widget';\n\nexport const materialDesignRenderOptions: RenderOptions = {\n  [FieldType.TEXT]: NgxMaterialInputWidget as unknown as FieldWidget,\n  [FieldType.RADIO]: NgxMaterialRadioWidget as unknown as FieldWidget,\n  [FieldType.DATE]: NgxMaterialDateWidget as unknown as FieldWidget,\n  [FieldType.TEXTAREA]: NgxMaterialTextareaWidget as unknown as FieldWidget,\n};\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["tslib_1.__extends"],"mappings":";;;;;;;;;;;;IA6B2CA,yCAAW;;IAAtD;;KAAyD;IAA5C,qBAAqB;QA1BjC,SAAS,CAAC;;YAET,QAAQ,EAAE,0BAA0B;YACpC,QAAQ,EAAE,+tBAoBT;SACF,CAAC;;OAEW,qBAAqB,CAAuB;IAAD,4BAAC;CAAA,CAAd,WAAW;;;ICNVA,0CAAW;;IAAvD;;KAA0D;IAA7C,sBAAsB;QApBlC,SAAS,CAAC;;YAET,QAAQ,EAAE,2BAA2B;YACrC,QAAQ,EAAE,mhBAcT;SACF,CAAC;;OAEW,sBAAsB,CAAuB;IAAD,6BAAC;CAAA,CAAd,WAAW;;;ICEXA,0CAAW;;IAAvD;;KAA0D;IAA7C,sBAAsB;QAtBlC,SAAS,CAAC;;YAET,QAAQ,EAAE,2BAA2B;YACrC,QAAQ,EAAE,8sBAgBT;SACF,CAAC;;OAEW,sBAAsB,CAAuB;IAAD,6BAAC;CAAA,CAAd,WAAW;;;ICFRA,6CAAW;;IAA1D;;KAA6D;IAAhD,yBAAyB;QApBrC,SAAS,CAAC;;YAET,QAAQ,EAAE,2BAA2B;YACrC,QAAQ,EAAE,+hBAcT;SACF,CAAC;;OAEW,yBAAyB,CAAuB;IAAD,gCAAC;CAAA,CAAd,WAAW;;ACV1D,IAAM,OAAO,GAAG,CAAC,qBAAqB,EAAE,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,CAAC,CAAC;AAgBnH;IAAA;KAAqC;IAAxB,qBAAqB;QAdjC,QAAQ,CAAC;YACR,OAAO,EAAE;gBACP,YAAY;gBACZ,mBAAmB;gBACnB,mBAAmB;gBACnB,cAAc;gBACd,cAAc;gBACd,mBAAmB;gBACnB,eAAe;aAChB;YACD,OAAO,WAAM,OAAO,CAAC;YACrB,YAAY,WAAM,OAAO,CAAC;YAC1B,eAAe,WAAM,OAAO,CAAC;SAC9B,CAAC;OACW,qBAAqB,CAAG;IAAD,4BAAC;CAArC;;;AC5BA,IAMa,2BAA2B;IACtC,GAAC,SAAS,CAAC,IAAI,IAAG,sBAAgD;IAClE,GAAC,SAAS,CAAC,KAAK,IAAG,sBAAgD;IACnE,GAAC,SAAS,CAAC,IAAI,IAAG,qBAA+C;IACjE,GAAC,SAAS,CAAC,QAAQ,IAAG,yBAAmD;OAC1E;;ACZD;;GAEG;;;;"}
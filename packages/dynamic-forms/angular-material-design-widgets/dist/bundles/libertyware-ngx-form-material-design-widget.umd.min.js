!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("@angular/core"),require("@libertyware/ngx-form-gen"),require("@angular/common"),require("@angular/forms"),require("@angular/material/datepicker"),require("@angular/material/input"),require("@angular/material/core"),require("@angular/material/radio"),require("@libertyware/ngx-form-core")):"function"==typeof define&&define.amd?define("@libertyware/ngx-form-material-design-widget",["exports","@angular/core","@libertyware/ngx-form-gen","@angular/common","@angular/forms","@angular/material/datepicker","@angular/material/input","@angular/material/core","@angular/material/radio","@libertyware/ngx-form-core"],r):r(((e=e||self).libertyware=e.libertyware||{},e.libertyware["ngx-form-material-design-widget"]={}),e.ng.core,e.ngxFormGen,e.ng.common,e.ng.forms,e.ng.material.datepicker,e.ng.material.input,e.ng.material.core,e.ng.material.radio,e.ngxFormCore)}(this,(function(e,r,t,n,a,o,i,l,d,m){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */var u=function(e,r){return(u=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var t in r)r.hasOwnProperty(t)&&(e[t]=r[t])})(e,r)};function c(e,r){function t(){this.constructor=e}u(e,r),e.prototype=null===r?Object.create(r):(t.prototype=r.prototype,new t)}function f(e,r,t,n){var a,o=arguments.length,i=o<3?r:null===n?n=Object.getOwnPropertyDescriptor(r,t):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,r,t,n);else for(var l=e.length-1;l>=0;l--)(a=e[l])&&(i=(o<3?a(i):o>3?a(r,t,i):a(r,t))||i);return o>3&&i&&Object.defineProperty(r,t,i),i}function p(e,r){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var n,a,o=t.call(e),i=[];try{for(;(void 0===r||r-- >0)&&!(n=o.next()).done;)i.push(n.value)}catch(e){a={error:e}}finally{try{n&&!n.done&&(t=o.return)&&t.call(o)}finally{if(a)throw a.error}}return i}function g(){for(var e=[],r=0;r<arguments.length;r++)e=e.concat(p(arguments[r]));return e}var s,y=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return c(t,e),t=f([r.Component({selector:"ngx-material-date-widget",template:'\n    <div class="example-container" [id]="fieldName + \'-controls\'">\n      <mat-form-field>\n        <input\n          matInput\n          [matDatepicker]="picker"\n          [placeholder]="formControl?.readableName"\n        />\n        <mat-datepicker-toggle matSuffix [for]="picker"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n        <mat-hint>{{ hintText }}</mat-hint>\n        <mat-error *ngIf="group?.customValidateErrors | async as errors">\n          <ng-container *ngFor="let error of errors[fieldName]; let i = index">\n            <div>\n              {{ error }}\n            </div>\n          </ng-container>\n        </mat-error>\n      </mat-form-field>\n    </div>\n  '})],t)}(t.FieldWidget),x=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return c(t,e),t=f([r.Component({selector:"ngx-material-input-widget",template:'\n    <div class="example-container" [id]="fieldName + \'-controls\'">\n      <mat-form-field>\n        <input matInput [placeholder]="formControl?.readableName" />\n        <mat-hint>{{ hintText }}</mat-hint>\n        <mat-error *ngIf="group?.customValidateErrors | async as errors">\n          <ng-container *ngFor="let error of errors[fieldName]; let i = index">\n            <div>\n              {{ error }}\n            </div>\n          </ng-container>\n        </mat-error>\n      </mat-form-field>\n    </div>\n  '})],t)}(t.FieldWidget),h=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return c(t,e),t=f([r.Component({selector:"ngx-material-radio-widget",template:'\n    <div class="example-container" [id]="fieldName + \'-controls\'">\n      <mat-form-field>\n        <mat-radio-group aria-label="Select an option">\n          <mat-radio-button *ngFor="let radioOption of formControl.radioOptions; let i = index" [value]="radioOption.value">{{ radioOption.label }}</mat-radio-button>\n        </mat-radio-group>\n        <mat-hint>{{ hintText }}</mat-hint>\n        <mat-error *ngIf="group?.customValidateErrors | async as errors">\n          <ng-container *ngFor="let error of errors[fieldName]; let i = index">\n            <div>\n              {{ error }}\n            </div>\n          </ng-container>\n        </mat-error>\n      </mat-form-field>\n    </div>\n  '})],t)}(t.FieldWidget),v=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return c(t,e),t=f([r.Component({selector:"ngx-material-input-widget",template:'\n    <div class="example-container" [id]="fieldName + \'-controls\'">\n      <mat-form-field>\n        <textarea matInput [placeholder]="formControl?.readableName"></textarea>\n        <mat-hint>{{ hintText }}</mat-hint>\n        <mat-error *ngIf="group?.customValidateErrors | async as errors">\n          <ng-container *ngFor="let error of errors[fieldName]; let i = index">\n            <div>\n              {{ error }}\n            </div>\n          </ng-container>\n        </mat-error>\n      </mat-form-field>\n    </div>\n  '})],t)}(t.FieldWidget),b=[y,x,h,v],M=function(){function e(){}return e=f([r.NgModule({imports:[n.CommonModule,a.ReactiveFormsModule,o.MatDatepickerModule,i.MatInputModule,d.MatRadioModule,l.MatNativeDateModule,l.MatRippleModule],exports:g(b),declarations:g(b),entryComponents:g(b)})],e)}(),w=((s={})[m.FieldType.TEXT]=x,s[m.FieldType.RADIO]=h,s[m.FieldType.DATE]=y,s[m.FieldType.TEXTAREA]=v,s);e.NgxMaterialDateWidget=y,e.NgxMaterialFormModule=M,e.NgxMaterialInputWidget=x,e.NgxMaterialRadioWidget=h,e.NgxMaterialTextareaWidget=v,e.materialDesignRenderOptions=w,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=libertyware-ngx-form-material-design-widget.umd.min.js.map
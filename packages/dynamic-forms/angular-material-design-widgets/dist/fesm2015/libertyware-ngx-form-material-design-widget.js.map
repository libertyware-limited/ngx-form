{"version":3,"file":"libertyware-ngx-form-material-design-widget.js","sources":["ng://@libertyware/ngx-form-material-design-widget/date-field.widget.ts","ng://@libertyware/ngx-form-material-design-widget/input-field.widget.ts","ng://@libertyware/ngx-form-material-design-widget/radio-field.widget.ts","ng://@libertyware/ngx-form-material-design-widget/textarea-field.widget.ts","ng://@libertyware/ngx-form-material-design-widget/material-form-widget.module.ts","ng://@libertyware/ngx-form-material-design-widget/widget-preset.ts","ng://@libertyware/ngx-form-material-design-widget/libertyware-ngx-form-material-design-widget.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FieldWidget } from '@libertyware/ngx-form-gen';\n\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'ngx-material-date-widget',\n  template: `\n    <div class=\"example-container\" [id]=\"fieldName + '-controls'\">\n      <mat-form-field>\n        <input\n          matInput\n          [matDatepicker]=\"picker\"\n          [placeholder]=\"formControl?.readableName\"\n        />\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n        <mat-hint>{{ hintText }}</mat-hint>\n        <mat-error *ngIf=\"group?.customValidateErrors | async as errors\">\n          <ng-container *ngFor=\"let error of errors[fieldName]; let i = index\">\n            <div>\n              {{ error }}\n            </div>\n          </ng-container>\n        </mat-error>\n      </mat-form-field>\n    </div>\n  `\n})\n// tslint:disable-next-line: component-class-suffix\nexport class NgxMaterialDateWidget extends FieldWidget {}\n","import { Component } from '@angular/core';\nimport { FieldWidget } from '@libertyware/ngx-form-gen';\n\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'ngx-material-input-widget',\n  template: `\n    <div class=\"example-container\" [id]=\"fieldName + '-controls'\">\n      <mat-form-field>\n        <input matInput [placeholder]=\"formControl?.readableName\" />\n        <mat-hint>{{ hintText }}</mat-hint>\n        <mat-error *ngIf=\"group?.customValidateErrors | async as errors\">\n          <ng-container *ngFor=\"let error of errors[fieldName]; let i = index\">\n            <div>\n              {{ error }}\n            </div>\n          </ng-container>\n        </mat-error>\n      </mat-form-field>\n    </div>\n  `\n})\n// tslint:disable-next-line: component-class-suffix\nexport class NgxMaterialInputWidget extends FieldWidget {}\n","import { Component } from '@angular/core';\nimport { FieldWidget } from '@libertyware/ngx-form-gen';\n\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'ngx-material-radio-widget',\n  template: `\n    <div class=\"example-container\" [id]=\"fieldName + '-controls'\">\n      <mat-form-field>\n        <mat-radio-group aria-label=\"Select an option\">\n          <mat-radio-button *ngFor=\"let radioOption of formControl.radioOptions; let i = index\" [value]=\"radioOption.value\">{{ radioOption.label }}</mat-radio-button>\n        </mat-radio-group>\n        <mat-hint>{{ hintText }}</mat-hint>\n        <mat-error *ngIf=\"group?.customValidateErrors | async as errors\">\n          <ng-container *ngFor=\"let error of errors[fieldName]; let i = index\">\n            <div>\n              {{ error }}\n            </div>\n          </ng-container>\n        </mat-error>\n      </mat-form-field>\n    </div>\n  `\n})\n// tslint:disable-next-line: component-class-suffix\nexport class NgxMaterialRadioWidget extends FieldWidget {}\n","import { Component } from '@angular/core';\nimport { FieldWidget } from '@libertyware/ngx-form-gen';\n\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'ngx-material-input-widget',\n  template: `\n    <div class=\"example-container\" [id]=\"fieldName + '-controls'\">\n      <mat-form-field>\n        <textarea matInput [placeholder]=\"formControl?.readableName\"></textarea>\n        <mat-hint>{{ hintText }}</mat-hint>\n        <mat-error *ngIf=\"group?.customValidateErrors | async as errors\">\n          <ng-container *ngFor=\"let error of errors[fieldName]; let i = index\">\n            <div>\n              {{ error }}\n            </div>\n          </ng-container>\n        </mat-error>\n      </mat-form-field>\n    </div>\n  `\n})\n// tslint:disable-next-line: component-class-suffix\nexport class NgxMaterialTextareaWidget extends FieldWidget {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { NgxMaterialDateWidget } from './date-field.widget';\nimport { NgxMaterialInputWidget } from './input-field.widget';\nimport { NgxMaterialRadioWidget } from './radio-field.widget';\nimport { NgxMaterialTextareaWidget } from './textarea-field.widget';\n\nconst widgets = [NgxMaterialDateWidget, NgxMaterialInputWidget, NgxMaterialRadioWidget, NgxMaterialTextareaWidget];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatDatepickerModule,\n    MatInputModule,\n    MatRadioModule,\n    MatNativeDateModule,\n    MatRippleModule\n  ],\n  exports: [...widgets],\n  declarations: [...widgets],\n  entryComponents: [...widgets]\n})\nexport class NgxMaterialFormModule {}\n","import { RenderOptions, FieldWidget } from '@libertyware/ngx-form-gen';\nimport { FieldType } from '@libertyware/ngx-form-core';\nimport { NgxMaterialInputWidget } from './input-field.widget';\nimport { NgxMaterialDateWidget } from './date-field.widget';\nimport { NgxMaterialRadioWidget } from './radio-field.widget';\nimport { NgxMaterialTextareaWidget } from './textarea-field.widget';\n\nexport const materialDesignRenderOptions: RenderOptions = {\n  [FieldType.TEXT]: NgxMaterialInputWidget as unknown as FieldWidget,\n  [FieldType.RADIO]: NgxMaterialRadioWidget as unknown as FieldWidget,\n  [FieldType.DATE]: NgxMaterialDateWidget as unknown as FieldWidget,\n  [FieldType.TEXTAREA]: NgxMaterialTextareaWidget as unknown as FieldWidget,\n};\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;;;;;;IA6Ba,qBAAqB;;AAAlC,MAAa,qBAAsB,SAAQ,WAAW;CAAG,CAAA;AAA5C,qBAAqB;IA1BjC,SAAS,CAAC;;QAET,QAAQ,EAAE,0BAA0B;QACpC,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;GAoBT;KACF,CAAC;;GAEW,qBAAqB,CAAuB;;ICN5C,sBAAsB;;AAAnC,MAAa,sBAAuB,SAAQ,WAAW;CAAG,CAAA;AAA7C,sBAAsB;IApBlC,SAAS,CAAC;;QAET,QAAQ,EAAE,2BAA2B;QACrC,QAAQ,EAAE;;;;;;;;;;;;;;GAcT;KACF,CAAC;;GAEW,sBAAsB,CAAuB;;ICE7C,sBAAsB;;AAAnC,MAAa,sBAAuB,SAAQ,WAAW;CAAG,CAAA;AAA7C,sBAAsB;IAtBlC,SAAS,CAAC;;QAET,QAAQ,EAAE,2BAA2B;QACrC,QAAQ,EAAE;;;;;;;;;;;;;;;;GAgBT;KACF,CAAC;;GAEW,sBAAsB,CAAuB;;ICF7C,yBAAyB;;AAAtC,MAAa,yBAA0B,SAAQ,WAAW;CAAG,CAAA;AAAhD,yBAAyB;IApBrC,SAAS,CAAC;;QAET,QAAQ,EAAE,2BAA2B;QACrC,QAAQ,EAAE;;;;;;;;;;;;;;GAcT;KACF,CAAC;;GAEW,yBAAyB,CAAuB;;ACV7D,MAAM,OAAO,GAAG,CAAC,qBAAqB,EAAE,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,CAAC,CAAC;AAgBnH,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;CAAG,CAAA;AAAxB,qBAAqB;IAdjC,QAAQ,CAAC;QACR,OAAO,EAAE;YACP,YAAY;YACZ,mBAAmB;YACnB,mBAAmB;YACnB,cAAc;YACd,cAAc;YACd,mBAAmB;YACnB,eAAe;SAChB;QACD,OAAO,EAAE,CAAC,GAAG,OAAO,CAAC;QACrB,YAAY,EAAE,CAAC,GAAG,OAAO,CAAC;QAC1B,eAAe,EAAE,CAAC,GAAG,OAAO,CAAC;KAC9B,CAAC;GACW,qBAAqB,CAAG;;MCtBxB,2BAA2B,GAAkB;IACxD,CAAC,SAAS,CAAC,IAAI,GAAG,sBAAgD;IAClE,CAAC,SAAS,CAAC,KAAK,GAAG,sBAAgD;IACnE,CAAC,SAAS,CAAC,IAAI,GAAG,qBAA+C;IACjE,CAAC,SAAS,CAAC,QAAQ,GAAG,yBAAmD;CAC1E;;ACZD;;GAEG;;;;"}
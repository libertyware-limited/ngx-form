{"version":3,"file":"libertyware-ngx-form-builder.umd.js","sources":["../../../../../node_modules/tslib/tslib.es6.js","ng://@libertyware/ngx-form-builder/models/dynamic-form-group-config.ts","ng://@libertyware/ngx-form-builder/validators/forever-invalid.validator.ts","ng://@libertyware/ngx-form-builder/utils/dynamic-form-control.ts","ng://@libertyware/ngx-form-builder/utils/dynamic-form-group.ts","ng://@libertyware/ngx-form-builder/utils/dynamic-form-builder.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { AbstractControlOptions, AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { ValidatorOptions } from 'class-validator';\nimport { isNullOrUndefined } from 'util';\n\nexport interface DynamicFormGroupConfig {\n  validator?: ValidatorFn | undefined;\n  asyncValidator?: AsyncValidatorFn | undefined;\n  validators?: ValidatorFn[] | undefined;\n  asyncValidators?: AsyncValidatorFn[] | undefined;\n  updateOn?: any | undefined;\n  customValidatorOptions?: ValidatorOptions | undefined;\n}\nexport function isDynamicFormGroupConfig(options:DynamicFormGroupConfig) {\n  return options && !isNullOrUndefined(options['customValidatorOptions']);\n}\nexport function isLegacyOrOpts(options: DynamicFormGroupConfig) {\n  return options && (!isNullOrUndefined(options['validator']) || !isNullOrUndefined(options['asyncValidator']));\n}\nexport function isAbstractControlOptions(options: AbstractControlOptions | DynamicFormGroupConfig) {\n  return (\n    options &&\n    (!isNullOrUndefined(options.validators) ||\n      !isNullOrUndefined(options.asyncValidators) ||\n      !isNullOrUndefined(options.updateOn))\n  );\n}\n","import { FormControl } from '@angular/forms';\r\n\r\nexport function foreverInvalid(c: FormControl) {\r\n  return {\r\n    foreverInvalid: {\r\n      valid: false\r\n    }\r\n  };\r\n}\r\nexport const FOREVER_INVALID_NAME = 'foreverInvalid';\r\n","import { FormControl } from '@angular/forms';\nimport { ValidationMetadata } from 'class-validator/metadata/ValidationMetadata';\nimport { MetadataKeys, RadioOption, TextareaOption } from '@libertyware/ngx-form-core';\n\nimport { DynamicFormGroupField } from '../models/dynamic-form-group-field';\nimport { DynamicFormGroup } from './dynamic-form-group';\n\nexport class DynamicFormControl extends FormControl {\n  public validationDefinitions: ValidationMetadata[];\n\n  constructor(fieldDefinition: DynamicFormGroupField) {\n    super(fieldDefinition.data, fieldDefinition.validationFunctions);\n\n    this.validationDefinitions = fieldDefinition.validationDefinitions;\n  }\n\n  private get formModel(): any {\n    return (this.parent as DynamicFormGroup<any>).object;\n  }\n\n\n  get hint(): string {\n    return this.metaData(MetadataKeys.HINT);\n  }\n\n  get readableName(): string {\n    return this.metaData(MetadataKeys.DISPLAY_NAME) || this.ControlName;\n  }\n\n  get placeholder(): string {\n    return this.metaData(MetadataKeys.PLACEHOLDER);\n  }\n\n  private metaData(key: string): any {\n    return Reflect.getMetadata(key, this.formModel, this.ControlName);\n  }\n\n  get ControlName(): string {\n    const controls: any = this.parent.controls;\n    return Object.keys(controls).find(name => this === controls[name]) as string;\n  }\n\n  get radioOptions(): RadioOption[] {\n    return this.metaData(MetadataKeys.RADIO_OPTIONS) || [];\n  }\n\n  get textareaOptions(): TextareaOption {\n    return this.metaData(MetadataKeys.TEXTAREA_OPTIONS);\n  }\n}\n","import {\n  AbstractControl,\n  AbstractControlOptions,\n  AsyncValidatorFn,\n  FormArray,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ValidatorFn\n} from '@angular/forms';\nimport { classToClass, plainToClass } from 'class-transformer';\nimport { ClassType } from 'class-transformer/ClassTransformer';\nimport {\n  getFromContainer,\n  MetadataStorage,\n  validate,\n  validateSync,\n  ValidationError,\n  ValidationTypes,\n  Validator,\n  ValidatorOptions\n} from 'class-validator';\nimport { ValidationMetadata } from 'class-validator/metadata/ValidationMetadata';\nimport 'reflect-metadata';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport {\n  Dictionary,\n} from '../models/dictionary';\nimport {\n  ShortValidationErrors,\n} from '../models/short-validation-errors';\nimport {\n  DynamicFormGroupField,\n} from '../models/dynamic-form-group-field';\nimport {\n  foreverInvalid,\n  FOREVER_INVALID_NAME\n} from '../validators/forever-invalid.validator';\nimport { DynamicFormControl } from './dynamic-form-control';\nimport { WidgetOptions, getFormFieldsOptions } from '@libertyware/ngx-form-core';\n\nimport cloneDeep from 'lodash.clonedeep';\nimport mergeWith from 'lodash.mergewith';\n\n// Enforces the properties of the object, if supplied, to be of the original type or DynamicFormGroup or, FormArray\nexport type FormModel<T> = {\n  [P in keyof T]?: T[P] | DynamicFormGroup<any> | FormArray;\n};\n\nexport class DynamicFormGroup<TModel> extends FormGroup {\n  public nativeValidateErrors = new BehaviorSubject<Dictionary>({});\n  public customValidateErrors = new BehaviorSubject<ShortValidationErrors>({});\n  public formErrors: ShortValidationErrors | null = null;\n  public formFields: Dictionary;\n  public objectChange = new Subject();\n\n  protected FormControlClass = DynamicFormControl;\n  protected _object: TModel | null = null;\n  protected _externalErrors: ShortValidationErrors | null = null;\n  protected _validatorOptions: ValidatorOptions | null = null;\n  protected _fb = new FormBuilder();\n  private _formGen: WidgetOptions[];\n\n  constructor(\n    public factoryModel: ClassType<TModel>,\n    public fields: FormModel<TModel>,\n    validatorOrOpts?:\n      | ValidatorFn\n      | ValidatorFn[]\n      | AbstractControlOptions\n      | null,\n    asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[] | null\n  ) {\n    super({}, validatorOrOpts, asyncValidator);\n    /*\n    const classValidators = DynamicFormGroup.getClassValidators<TModel>(\n      this.factoryModel,\n      this.fields,\n      this.defaultValidatorOptions\n    );\n    const formGroup = this._fb.group(\n      classValidators\n    );\n    Object.keys(formGroup.controls).forEach(key => {\n      this.addControl(key, formGroup.controls[key]);\n    });\n    this.valueChanges.subscribe(data => {\n      this.validate(\n        undefined,\n        this.defaultValidatorOptions\n      );\n    });*/\n    this.formFields = this.onlyFields(fields);\n    this._formGen = getFormFieldsOptions(factoryModel);\n  }\n\n  getFormGenData() {\n    return this._formGen;\n  }\n\n  // Getters & Setters\n  set externalErrors(externalErrors: ShortValidationErrors | null) {\n    this._externalErrors = externalErrors;\n    this.validate();\n  }\n  get externalErrors(): ShortValidationErrors | null {\n    return this._externalErrors;\n  }\n\n  set validatorOptions(validatorOptions: ValidatorOptions | null) {\n    this._validatorOptions = validatorOptions;\n    this.validate();\n  }\n  get validatorOptions(): ValidatorOptions | null {\n    return this._validatorOptions;\n  }\n\n  set object(object: TModel) {\n    this.setObject(object);\n  }\n  get object() {\n    return this.getObject();\n  }\n\n  // Public API\n  validate(\n    externalErrors?: ShortValidationErrors,\n    validatorOptions?: ValidatorOptions\n  ) {\n    this.validateAsync(externalErrors, validatorOptions).then(\n      () => {},\n      error => {\n        throw error;\n      }\n    );\n  }\n\n  async validateAsync(\n    externalErrors?: ShortValidationErrors,\n    validatorOptions?: ValidatorOptions\n  ) {\n    if (externalErrors === undefined) {\n      externalErrors = cloneDeep(this._externalErrors);\n    }\n\n    if (validatorOptions === undefined) {\n      validatorOptions = cloneDeep(this._validatorOptions);\n    }\n\n    if (!externalErrors) {\n      externalErrors = {};\n    }\n\n    try {\n      const result = await validate(this.object, validatorOptions);\n      const validationErrors = this.transformValidationErrors(result);\n      const allErrors = this.mergeErrors(externalErrors, validationErrors);\n\n      this.markAsInvalidForExternalErrors(externalErrors);\n      this.setCustomErrors(allErrors);\n\n      // todo: refactor, invalidate form if exists any allErrors\n      let usedForeverInvalid = false;\n      if (\n        Object.keys(allErrors).filter(key => key !== FOREVER_INVALID_NAME)\n          .length === 0 &&\n        this.get(FOREVER_INVALID_NAME)\n      ) {\n        this.removeControl(FOREVER_INVALID_NAME);\n        usedForeverInvalid = true;\n      }\n      if (\n        this.valid &&\n        Object.keys(allErrors).length > 0 &&\n        !this.get(FOREVER_INVALID_NAME)\n      ) {\n        this.addControl(\n          FOREVER_INVALID_NAME,\n          new FormControl('', [foreverInvalid as any])\n        );\n        usedForeverInvalid = true;\n      }\n      if (usedForeverInvalid) {\n        this.updateValueAndValidity({\n          onlySelf: true,\n          emitEvent: false\n        });\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  setCustomErrors(allErrors: any) {\n    this.formErrors = allErrors;\n    this.customValidateErrors.next(this.formErrors as ShortValidationErrors );\n    this.nativeValidateErrors.next(this.collectErrors(this));\n  }\n\n  protected collectErrors(control: Dictionary, isRoot = true): any | null {\n    if (control.controls) {\n      return {\n        ...(isRoot ? this.errors : {}),\n        ...Object.entries(control.controls).reduce(\n          (acc: any, [key, childControl]) => {\n            const childErrors = this.collectErrors(childControl as Dictionary<any>, false);\n            if (\n              childErrors &&\n              key !== 'foreverInvalid' &&\n              Object.keys(childErrors).length > 0\n            ) {\n              acc = {\n                ...acc,\n                [key]: {\n                  ...(acc && acc[key] ? acc[key] : {}),\n                  ...childErrors\n                }\n              };\n            }\n            return acc;\n          },\n          {}\n        )\n      };\n    } else {\n      return control.errors;\n    }\n  }\n\n  validateAllFormFields() {\n    Object.keys(this.controls).forEach(field => {\n      const control = this.get(field);\n\n      // Control\n      if (control instanceof FormControl) {\n        control.markAsTouched({ onlySelf: true });\n      }\n      // Group: recursive\n      else if (control instanceof DynamicFormGroup) {\n        control.validateAllFormFields();\n      }\n      // Array\n      else if (control instanceof FormArray) {\n        for (let i = 0; i < (control as FormArray).controls.length; i++) {\n          // Control in Array\n          if ((control as FormArray).controls[i] instanceof FormControl) {\n            ((control as FormArray).controls[i] as FormControl).markAsTouched({\n              onlySelf: true\n            });\n          }\n          // Group in Array: recursive\n          else if (\n            (control as FormArray).controls[i] instanceof DynamicFormGroup\n          ) {\n            ((control as FormArray).controls[i] as DynamicFormGroup<\n              any\n            >).validateAllFormFields();\n          }\n        }\n      }\n    });\n  }\n\n  resetValidateAllFormFields() {\n    this.markAsInvalidForExternalErrors({});\n\n    Object.keys(this.controls).forEach(field => {\n      const control = this.get(field);\n\n      // Control\n      if (control instanceof FormControl) {\n        control.setErrors(null, { emitEvent: false });\n        control.markAsUntouched({ onlySelf: true });\n        control.markAsPristine({ onlySelf: true });\n      }\n      // Group: recursive\n      else if (control instanceof DynamicFormGroup) {\n        control.resetValidateAllFormFields();\n      }\n      // Array\n      else if (control instanceof FormArray) {\n        for (let i = 0; i < (control as FormArray).controls.length; i++) {\n          // Control in Array\n          if ((control as FormArray).controls[i] instanceof FormControl) {\n            ((control as FormArray).controls[\n              i\n            ] as FormControl).setErrors(null, { emitEvent: false });\n            ((control as FormArray).controls[\n              i\n            ] as FormControl).markAsUntouched({ onlySelf: true });\n            ((control as FormArray).controls[i] as FormControl).markAsPristine({\n              onlySelf: true\n            });\n          }\n          // Group in Array: recursive\n          else if (\n            (control as FormArray).controls[i] instanceof DynamicFormGroup\n          ) {\n            ((control as FormArray).controls[i] as DynamicFormGroup<\n              any\n            >).resetValidateAllFormFields();\n          }\n        }\n      }\n    });\n    this.setCustomErrors({});\n  }\n\n  classToClass<TClassModel>(object: TClassModel) {\n    return classToClass(object, { ignoreDecorators: true });\n  }\n\n  plainToClass<TClassModel, Object>(\n    cls: ClassType<TClassModel>,\n    plain: Object\n  ) {\n    return plainToClass(cls, plain, { ignoreDecorators: true });\n  }\n\n  async setExternalErrorsAsync(externalErrors: ShortValidationErrors) {\n    this._externalErrors = externalErrors;\n    try {\n      return await this.validateAsync();\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  setExternalErrors(externalErrors: ShortValidationErrors) {\n    this.setExternalErrorsAsync(externalErrors).then(\n      () => {},\n      error => {\n        throw error;\n      }\n    );\n  }\n\n  getExternalErrors(): ShortValidationErrors {\n    return this._externalErrors as ShortValidationErrors;\n  }\n\n  clearExternalErrors() {\n    this.setExternalErrors({});\n  }\n  clearExternalErrorsAsync() {\n    return this.setExternalErrorsAsync({});\n  }\n\n  async setValidatorOptionsAsync(validatorOptions: ValidatorOptions) {\n    this._validatorOptions = validatorOptions;\n    try {\n      return await this.validateAsync();\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  setValidatorOptions(validatorOptions: ValidatorOptions) {\n    this.setValidatorOptionsAsync(validatorOptions).then(\n      () => {},\n      error => {\n        throw error;\n      }\n    );\n  }\n\n  getValidatorOptions(): ValidatorOptions {\n    return this._validatorOptions as ValidatorOptions;\n  }\n\n  // Helpers\n  protected onlyFields(fields: FormModel<any>): Dictionary {\n    const newFields: Dictionary = {};\n\n    if (fields !== undefined) {\n      Object.keys(fields).forEach(key => {\n        if (fields[key] instanceof DynamicFormGroup) {\n          // Group: recursive\n          newFields[key] = this.onlyFields(\n            (fields[key] as DynamicFormGroup<any>).formFields\n          );\n        } else {\n          // Array\n          if (fields[key] instanceof FormArray) {\n            if (\n              (fields[key] as FormArray).controls[0] instanceof DynamicFormGroup\n            ) {\n              // Group within Array: recursive\n              newFields[key] = this.onlyFields(\n                ((fields[key] as FormArray).controls[0] as DynamicFormGroup<\n                  any\n                >).formFields\n              );\n            } else {\n              // Control within Array\n              newFields[key] = (fields[key] as FormArray).controls[0].value;\n            }\n          } else {\n            // Handle Control\n            newFields[key] = fields[key];\n          }\n        }\n      });\n    }\n\n    return newFields;\n  }\n\n  transformValidationErrors(errors: ValidationError[]): ShortValidationErrors {\n    const customErrors: ShortValidationErrors = {};\n\n    errors.forEach((error: ValidationError) => {\n      if (error && error.constraints !== undefined) {\n        Object.keys(error.constraints).forEach((key: string) => {\n          if (!customErrors[error.property]) {\n            customErrors[error.property] = [];\n          }\n\n          if (\n            (customErrors[error.property] as string[]).indexOf(\n              error.constraints[key]\n            ) === -1\n          ) {\n            (customErrors[error.property] as string[]).push(\n              error.constraints[key]\n            );\n          }\n        });\n      }\n\n      if (error.children !== undefined && error.children.length) {\n        customErrors[error.property] = this.transformValidationErrors(\n          error.children\n        );\n      }\n    });\n\n    return customErrors;\n  }\n\n  protected mergeErrors(\n    externalErrors?: ShortValidationErrors,\n    validationErrors?: ShortValidationErrors\n  ) {\n    const clonedExternalErrors = cloneDeep(externalErrors);\n    return mergeWith(\n      clonedExternalErrors,\n      validationErrors,\n      (objValue, srcValue) => {\n        if (canMerge()) {\n          return objValue.concat(srcValue);\n        }\n\n        function canMerge() {\n          return (\n            Array.isArray(objValue) &&\n            Array.isArray(srcValue) &&\n            objValue.filter(objItem => srcValue.indexOf(objItem) !== -1)\n              .length === 0\n          );\n        }\n      }\n    );\n  }\n\n  protected markAsInvalidForExternalErrors(\n    errors: ShortValidationErrors,\n    controls?: Dictionary<AbstractControl>\n  ) {\n    if (!controls) {\n      controls = this.controls;\n    }\n    Object.keys(controls).forEach(field => {\n      const control = controls![field];\n\n      // Control\n      if (control instanceof FormControl) {\n        if (errors && errors[field]) {\n          control.setErrors({ externalError: true });\n        } else {\n          if (control.errors && control.errors.externalError === true) {\n            control.setErrors(null);\n          }\n        }\n      }\n      // Group\n      else if (control instanceof DynamicFormGroup) {\n        control.markAsInvalidForExternalErrors(\n          errors && errors[field]\n            ? (errors[field] as ShortValidationErrors)\n            : {}\n        );\n      }\n      // Array\n      else if (control instanceof FormArray) {\n        for (let i = 0; i < (control as FormArray).length; i++) {\n          // Control in Array\n          if (control[i] instanceof FormControl) {\n            if (errors && errors[i] && errors[i][field]) {\n              control[i].setErrors({ externalError: true });\n            } else if (\n              control[i].errors &&\n              control[i].errors.externalError === true\n            ) {\n              control[i].setErrors(null);\n            }\n          }\n          // Group in Array\n          else if (control[i] instanceof DynamicFormGroup) {\n            control[i].markAsInvalidForExternalErrors(\n              errors && errors[i] && errors[i][field]\n                ? (errors[i][field] as ShortValidationErrors)\n                : {}\n            );\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Recursively gets all values from the form controls and all sub form group and array controls and returns it as\n   * an object\n   */\n  protected getObject(): TModel {\n    // Initialize the shape of the response\n    const object = this._object\n      ? this.classToClass(this._object)\n      : this.factoryModel\n      ? new this.factoryModel()\n      : undefined;\n\n    if (object !== undefined) {\n      // Recursively get the value of all fields\n      Object.keys(this.controls)\n        .filter(name => name !== FOREVER_INVALID_NAME)\n        .forEach(key => {\n          // Handle Group\n          if (this.controls[key] instanceof DynamicFormGroup) {\n            object[key] = (this.controls[key] as DynamicFormGroup<any>).object;\n          }\n\n          // Handle Form Array\n          else if (this.controls[key] instanceof FormArray) {\n            // Initialize value\n            object[key] = [];\n\n            for (\n              let i = 0;\n              i < (this.controls[key] as FormArray).controls.length;\n              i++\n            ) {\n              let value;\n\n              if (\n                (this.controls[key] as FormArray).controls[i] instanceof\n                DynamicFormGroup\n              ) {\n                // Recursively get object group\n                value = ((this.controls[key] as FormArray).controls[\n                  i\n                ] as DynamicFormGroup<any>).object;\n              } else {\n                value = (this.controls[key] as FormArray).controls[i].value;\n              }\n              if (value && Object.keys(value).length > 0) {\n                object[key].push(value);\n              }\n            }\n          }\n\n          // Handle Control\n          else {\n            object[key] = this.controls[key].value;\n          }\n        });\n    }\n    return (this.factoryModel\n      ? this.plainToClass(this.factoryModel, object)\n      : object) as TModel;\n  }\n\n  /**\n   * Sets the value of every control on the form and recursively sets the values of the controls\n   * on all sub form groups\n   *\n   * @param object the data to assign to all controls of the form group and sub groups\n   */\n  protected setObject(object: TModel) {\n    if (object instanceof this.factoryModel) {\n      this._object = this.classToClass(object); // Ensure correct type\n    } else {\n      this._object = this.plainToClass(this.factoryModel, object as Object); // Convert to Model type\n    }\n\n    // Recursively set the value of all fields\n    Object.keys(this.controls).forEach(key => {\n      // Handle Group\n      if (this.controls[key] instanceof DynamicFormGroup) {\n        (this.controls[key] as DynamicFormGroup<any>).object = this._object\n          ? this._object[key]\n          : {};\n      }\n\n      // Handle FormArray\n      else if (this.controls[key] instanceof FormArray) {\n        const objectArray = this._object ? this._object[key] : [];\n        const formArray = this.controls[key] as FormArray;\n        const isFormGroup = formArray.controls[0] instanceof DynamicFormGroup;\n        const firstFormGroup = formArray.controls[0] as DynamicFormGroup<any>;\n        const formControl = formArray.controls[0] as FormControl;\n\n        // Clear FormArray while retaining the reference\n        while (formArray.length !== 0) {\n          formArray.removeAt(0);\n        }\n\n        for (let i = 0; i < objectArray.length; i++) {\n          if (isFormGroup) {\n            // Create FormGroup\n            const dynamicFormGroup = new DynamicFormGroup(\n              firstFormGroup.factoryModel,\n              firstFormGroup.formFields\n            );\n\n            dynamicFormGroup.setParent(this);\n\n            const classValidators = getClassValidators<TModel>(\n              firstFormGroup.factoryModel,\n              firstFormGroup.formFields,\n              undefined,\n              this.FormControlClass\n            );\n            const formGroup = this._fb.group(classValidators);\n\n            // Add all controls to the form group\n            Object.keys(formGroup.controls).forEach(ctrlKey => {\n              dynamicFormGroup.addControl(ctrlKey, formGroup.controls[ctrlKey]);\n            });\n\n            // Add a value change listener to the group. on change, validate\n            dynamicFormGroup.valueChanges.subscribe(data => {\n              dynamicFormGroup.validate(undefined, this._validatorOptions as ValidatorOptions);\n            });\n\n            formArray.controls.push(dynamicFormGroup);\n\n            // Recusrively set the object value\n            (formArray.controls[i] as DynamicFormGroup<any>).object =\n              this._object && objectArray && objectArray[i]\n                ? objectArray[i]\n                : {};\n          } else {\n            // Create control\n            const controlValue =\n              this._object && objectArray && objectArray[i]\n                ? objectArray[i]\n                : undefined;\n            const newFormControl = new FormControl(\n              controlValue,\n              formControl.validator\n            );\n            newFormControl.setParent(this);\n\n            // Add the control to the FormArray\n            formArray.controls.push(newFormControl);\n          }\n        }\n      }\n\n      // Handle Control\n      else {\n        const newObject = this._object ? this._object[key] : [];\n        this.controls[key].setValue(\n          this._object && newObject ? newObject : undefined\n        );\n      }\n    });\n    this.objectChange.next(this._object);\n  }\n}\n\nexport function getClassValidators<TModel>(\n  factoryModel: ClassType<TModel>,\n  fields: Dictionary,\n  validatorOptions?: ValidatorOptions,\n  FormControlClass: any = DynamicFormControl\n) {\n  // Get the validation rules from the object decorators\n  const allValidationMetadatas: ValidationMetadata[] = getFromContainer(\n    MetadataStorage\n  ).getTargetValidationMetadatas(factoryModel, '');\n\n  // Get the validation rules for the validation group: https://github.com/typestack/class-validator#validation-groups\n  const validationGroupMetadatas: ValidationMetadata[] = getFromContainer(\n    MetadataStorage\n  ).getTargetValidationMetadatas(\n    factoryModel,\n    '',\n    validatorOptions && validatorOptions.groups\n      ? validatorOptions.groups\n      : undefined\n  );\n\n  const formGroupFields = {};\n  const validator = new Validator();\n\n  // Loop through all fields in the form definition\n  Object.keys(fields)\n    .filter(key => key.indexOf('__') !== 0)\n    .forEach(fieldName => {\n      // Conditional Validation for the field\n      const conditionalValidations: ValidationMetadata[] = [];\n      validationGroupMetadatas.forEach(validationMetadata => {\n        if (\n          isPropertyValidatorOfType(\n            validationMetadata,\n            fieldName,\n            ValidationKeys.conditional.type\n          )\n        ) {\n          conditionalValidations.push(validationMetadata);\n        }\n      });\n\n      // All Nested Validation for the field\n      const allNestedValidations: ValidationMetadata[] = [];\n      allValidationMetadatas.forEach(validationMetadata => {\n        if (\n          isPropertyValidatorOfType(\n            validationMetadata,\n            fieldName,\n            ValidationKeys.nested.type\n          )\n        ) {\n          allNestedValidations.push(validationMetadata);\n        }\n      });\n\n      // Nested Validation for the field for the requested class-validator group\n      const nestedGroupValidations: ValidationMetadata[] = [];\n      validationGroupMetadatas.forEach(validationMetadata => {\n        if (\n          isPropertyValidatorOfType(\n            validationMetadata,\n            fieldName,\n            ValidationKeys.nested.type\n          )\n        ) {\n          nestedGroupValidations.push(validationMetadata);\n        }\n      });\n\n      const fieldDefinition: DynamicFormGroupField = {\n        data: formGroupFields[fieldName],\n        validationFunctions: [],\n        validationDefinitions: []\n      };\n\n      if (fieldDefinition.data === undefined) {\n        fieldDefinition.data = fields[fieldName];\n      }\n      // TRY LINK EXISTS NATIVE VALIDATIONS, UNSTABLE !!!\n      if (\n        Array.isArray(fieldDefinition.data) &&\n        fieldDefinition.data.length > 1 &&\n        fieldDefinition.data.filter(\n          (validationFunction, index) =>\n            index > 0 && typeof validationFunction === 'function'\n        ).length > 0\n      ) {\n        fieldDefinition.data\n          .filter(\n            (validationFunction, index) =>\n              index > 0 && typeof validationFunction === 'function'\n          )\n          .forEach(validationFunction =>\n            fieldDefinition.validationFunctions.push(validationFunction)\n          );\n        fieldDefinition.data = fieldDefinition.data[0];\n      }\n\n      validationGroupMetadatas.forEach(validationMetadata => {\n        if (\n          validationMetadata.propertyName === fieldName &&\n          validationMetadata.type !== ValidationKeys.conditional.type\n        ) {\n          // Add all validation to the field except the @NestedValidation definition as\n          // being part of the form would imply it is validated if any other rules are present\n          if (validationMetadata.type !== ValidationKeys.nested.type) {\n            fieldDefinition.validationDefinitions.push(validationMetadata);\n          }\n\n          for (const typeKey in ValidationTypes) {\n            if (ValidationTypes.hasOwnProperty(typeKey)) {\n              // Handle Nested Validation\n              if (\n                checkWithAllNestedValidations(\n                  allNestedValidations,\n                  nestedGroupValidations,\n                  fieldName\n                )\n              ) {\n                if (isNestedValidate(validationMetadata, typeKey)) {\n                  const objectToValidate =\n                    fields[fieldName] instanceof DynamicFormGroup\n                      ? fields[fieldName].object\n                      : undefined;\n                  const nestedValidate = createNestedValidate(\n                    objectToValidate,\n                    validationMetadata\n                  );\n                  setFieldData(fieldName, fieldDefinition, nestedValidate);\n                }\n              }\n\n              // Handle Custom Validation\n              if (isCustomValidate(validationMetadata, typeKey)) {\n                const customValidation = createCustomValidation(\n                  fieldName,\n                  validationMetadata\n                );\n                setFieldData(fieldName, fieldDefinition, customValidation);\n              }\n\n              // Handle remaining validation\n              if (isDynamicValidate(validationMetadata, typeKey)) {\n                const dynamicValidate = createDynamicValidate(\n                  validationMetadata,\n                  conditionalValidations,\n                  fieldName\n                );\n                setFieldData(fieldName, fieldDefinition, dynamicValidate);\n              }\n            }\n          }\n        }\n      });\n      // Convert to a structure, angular understands\n      if (\n        fieldDefinition.data instanceof DynamicFormGroup ||\n        fieldDefinition.data instanceof FormArray\n      ) {\n        formGroupFields[fieldName] = fieldDefinition.data;\n      } else {\n        formGroupFields[fieldName] = new FormControlClass(fieldDefinition);\n      }\n    });\n\n  return formGroupFields;\n\n  // ******************************************************************************************\n  // Local Helper functions to help make the main code more readable\n  //\n\n  function createNestedValidate(\n    objectToValidate: any,\n    validationMetadata: ValidationMetadata\n  ) {\n    return function(control: FormControl) {\n      const isValid =\n        getValidateErrors(\n          control,\n          objectToValidate !== undefined ? objectToValidate : control.value,\n          validatorOptions as ValidatorOptions\n        ).length === 0;\n      return getIsValidResult(isValid, validationMetadata, 'nestedValidate');\n    };\n  }\n\n  function createDynamicValidate(\n    validationMetadata: ValidationMetadata,\n    conditionalValidations: ValidationMetadata[],\n    fieldName: string\n  ) {\n    return function(control: FormControl) {\n      if (!control) {\n        return null;\n      }\n\n      let isValid =\n        control.parent && control.parent.value\n          ? validator.validateValueByMetadata(control.value, validationMetadata)\n          : true;\n\n      if (!isValid && conditionalValidations.length > 0) {\n        const validateErrors = setObjectValueAndGetValidationErrors(\n          control,\n          fieldName,\n          validatorOptions as ValidatorOptions\n        );\n        isValid =\n          validateErrors.filter(\n            (error: ValidationError) => error.property === fieldName\n          ).length === 0;\n      }\n\n      return getIsValidResult(isValid, validationMetadata, 'dynamicValidate');\n    };\n  }\n\n  function createCustomValidation(\n    fieldName: string,\n    validationMetadata: ValidationMetadata\n  ) {\n    return function(control: FormControl) {\n      const validateErrors: ValidationError[] = setObjectValueAndGetValidationErrors(\n        control,\n        fieldName,\n        validatorOptions as ValidatorOptions\n      );\n      const isValid = getAllErrors(validateErrors, fieldName).length === 0;\n      return getIsValidResult(isValid, validationMetadata, 'customValidation');\n    };\n  }\n\n  function checkWithAllNestedValidations(\n    allNestedValidations: ValidationMetadata[],\n    nestedValidations: ValidationMetadata[],\n    key: string\n  ) {\n    return (\n      allNestedValidations.length === nestedValidations.length ||\n      ((fields[key] instanceof DynamicFormGroup ||\n        fields[key] instanceof FormArray) &&\n        allNestedValidations.length > 0 && nestedValidations.length === 0)\n    );\n  }\n\n  function isDynamicValidate(\n    validationMetadata: ValidationMetadata,\n    typeKey: string\n  ) {\n    return (\n      validationMetadata.type === ValidationTypes[typeKey] &&\n      validator[validationMetadata.type] !== undefined\n    );\n  }\n\n  /**\n   * marked with @Validate(...)\n   * https://github.com/typestack/class-validator#custom-validation-classes\n   */\n  function isCustomValidate(\n    validationMetadata: ValidationMetadata,\n    typeKey: string\n  ) {\n    return (\n      isNotPropertyValidation(validationMetadata, typeKey) &&\n      validationMetadata.type === ValidationKeys.custom.type &&\n      typeKey === ValidationKeys.custom.typeKey\n    );\n  }\n\n  /**\n   * marked with @ValidateNested()\n   * https://github.com/typestack/class-validator#validating-nested-objects\n   */\n  function isNestedValidate(\n    validationMetadata: ValidationMetadata,\n    typeKey: string\n  ) {\n    return (\n      isNotPropertyValidation(validationMetadata, typeKey) &&\n      validationMetadata.type === ValidationKeys.nested.type &&\n      typeKey === ValidationKeys.nested.typeKey\n    );\n  }\n\n  function isNotPropertyValidation(\n    validationMetadata: ValidationMetadata,\n    typeKey: string\n  ) {\n    return (\n      validationMetadata.type === ValidationTypes[typeKey] &&\n      validator[validationMetadata.type] === undefined\n    );\n  }\n\n  function setFieldData(\n    fieldName: string,\n    fieldDefinition: DynamicFormGroupField,\n    validationFunction: Function\n  ) {\n    /* todo: maybe not need, if enable this code, experemental mode not work\n    if (fields[fieldName] instanceof DynamicFormGroup) {\n      fields[fieldName].object = fields[fieldName].fields;\n    }*/\n\n    // Fill field data if empty\n    if (fieldDefinition.data === undefined) {\n      fieldDefinition.data = fields[fieldName];\n    }\n\n    fieldDefinition.validationFunctions.push(validationFunction);\n  }\n\n  function getAllErrors(\n    validateErrors: ValidationError[],\n    fieldName: string\n  ): ValidationError[] {\n    return validateErrors.filter(\n      (error: ValidationError) =>\n        // Check for nested/child errors\n        (error.children.length &&\n          error.children.filter(children => children.property === fieldName)) ||\n        error.property === fieldName\n    );\n  }\n}\n\n// ***************************************************************\n// Global Helper functions\n//\n\nfunction isPropertyValidatorOfType(\n  validationMetadata: ValidationMetadata,\n  fieldName: string,\n  validationMetadataType: string\n) {\n  return (\n    validationMetadata.propertyName === fieldName &&\n    validationMetadata.type === validationMetadataType\n  );\n}\n\nfunction setObjectValueAndGetValidationErrors(\n  control: FormControl,\n  key: string,\n  validatorOptions: ValidatorOptions\n) {\n  const object =\n    control.parent instanceof DynamicFormGroup\n      ? (control.parent as DynamicFormGroup<any>).object\n      : control.parent\n      ? control.parent.value\n      : {};\n\n  if (object) {\n    object[key] = control.value;\n  }\n\n  return getValidateErrors(control, object, validatorOptions);\n}\n\nfunction getValidateErrors(\n  control: FormControl,\n  dataToValidate: any,\n  validatorOptions: ValidatorOptions\n) {\n  const validateErrors: ValidationError[] =\n    control.parent && control.parent.value\n      ? validateSync(dataToValidate, validatorOptions)\n      : [];\n  return validateErrors;\n}\n\nfunction getIsValidResult(\n  isValid: boolean,\n  validationMetadata: ValidationMetadata,\n  errorType: ErrorPropertyName\n) {\n  return isValid\n    ? null\n    : {\n        [errorType]: {\n          valid: false,\n          type: validationMetadata.type\n        }\n      };\n}\n\ntype ErrorPropertyName =\n  | 'nestedValidate'\n  | 'customValidation'\n  | 'dynamicValidate';\n\nconst ValidationKeys = {\n  nested: {\n    type: 'nestedValidation',\n    typeKey: 'NESTED_VALIDATION'\n  },\n  conditional: {\n    type: 'conditionalValidation'\n  },\n  custom: {\n    type: 'customValidation',\n    typeKey: 'CUSTOM_VALIDATION'\n  }\n};\n","import 'reflect-metadata';\n\nimport { AbstractControlOptions, FormBuilder, ValidatorFn } from '@angular/forms';\nimport { plainToClass } from 'class-transformer';\nimport { ClassType } from 'class-transformer/ClassTransformer';\n\nimport {\n  DynamicFormGroupConfig,\n  isAbstractControlOptions,\n  isDynamicFormGroupConfig,\n  isLegacyOrOpts\n} from '../models/dynamic-form-group-config';\nimport { DynamicFormGroup, FormModel, getClassValidators } from './dynamic-form-group';\nimport { DynamicFormControl } from './dynamic-form-control';\nimport { DynamicForm } from '@libertyware/ngx-form-core';\n\nexport class DynamicFormBuilder extends FormBuilder {\n\n  protected FormGroupClass = DynamicFormGroup;\n  protected FormControlClass = DynamicFormControl;\n  group<TModel>(\n    factoryModel: ClassType<TModel>,\n    controlsConfig?:\n      | FormModel<TModel>\n      | DynamicFormGroupConfig\n      | { [key: string]: any },\n    options?: AbstractControlOptions | DynamicFormGroupConfig\n  ): DynamicFormGroup<TModel> {\n    // Process the group with the controlsConfig passed into extra instead. (What does this accomplish?)\n    if (\n      controlsConfig &&\n      (isAbstractControlOptions(controlsConfig) ||\n        isLegacyOrOpts(controlsConfig) ||\n        isDynamicFormGroupConfig(controlsConfig)) &&\n      !options\n    ) {\n      return this.group(factoryModel, undefined, controlsConfig);\n    }\n\n    // This section of code was added in from the original code - Jordan\n    if (!controlsConfig) {\n      const model = (new factoryModel() as unknown) as DynamicForm;\n      const fields = model.getFormFields();\n      controlsConfig = {\n        ...((fields\n          .map((field: any) => ({\n            [field.fieldName]: ''\n          }))\n          .reduce(\n            (rev: any, current: any) => ({ ...rev, ...current }),\n            {}\n          ) as unknown) as FormModel<TModel>)\n      };\n    }\n\n    const extra: DynamicFormGroupConfig = options as DynamicFormGroupConfig;\n\n    let validators: ValidatorFn[] | null = null;\n    let asyncValidators: ValidatorFn[]  | null = null;\n    let updateOn: any;\n\n    if (extra != null) {\n      if (isAbstractControlOptions(extra)) {\n        // `extra` are `AbstractControlOptions`\n        validators = extra.validators != null ? extra.validators : null;\n        asyncValidators = extra.asyncValidators != null ? extra.asyncValidators : null;\n        updateOn = extra.updateOn != null ? extra.updateOn : undefined;\n      }\n      if (isLegacyOrOpts(extra)) {\n        // `extra` are legacy form group options\n        validators = validators || [];\n        if (extra.validator) validators.push(extra.validator);\n\n        asyncValidators = asyncValidators || [];\n        if (extra.asyncValidator) validators.push(extra.asyncValidator);\n      }\n      // Set default customValidatorOptions\n      if (!isDynamicFormGroupConfig(extra)) {\n        extra.customValidatorOptions = { validationError: { target: false } };\n      }\n    }\n\n    let newControlsConfig: FormModel<TModel> | any;\n\n    if (controlsConfig !== undefined) {\n      newControlsConfig = controlsConfig as FormModel<TModel>;\n    }\n\n    // experimental\n    if (controlsConfig === undefined) {\n      newControlsConfig = { ...this.createEmptyObject(factoryModel) };\n\n      Object.keys(newControlsConfig).forEach(key => {\n        if (canCreateGroup()) {\n          // recursively create a dynamic group for the nested object\n          newControlsConfig[key] = this.group(\n            newControlsConfig[key].constructor,\n            undefined,\n            {\n              ...(extra.customValidatorOptions\n                ? { customValidatorOptions: extra.customValidatorOptions }\n                : {}),\n              asyncValidators,\n              updateOn,\n              validators\n            } as any\n          );\n        } else {\n          if (canCreateArray()) {\n            if (newControlsConfig[key][0].constructor) {\n              // recursively create an array with a group\n              newControlsConfig[key] = super.array(\n                newControlsConfig[key].map((newControlsConfigItem: any) =>\n                  this.group(newControlsConfigItem.constructor, undefined, {\n                    ...(extra.customValidatorOptions\n                      ? { customValidatorOptions: extra.customValidatorOptions }\n                      : {}),\n                    asyncValidators,\n                    updateOn,\n                    validators\n                  } as any)\n                )\n              );\n            } else {\n              // Create an array of form controls\n              newControlsConfig[key] = super.array(\n                newControlsConfig[key].map((newControlsConfigItem: any) =>\n                  this.control(newControlsConfigItem)\n                )\n              );\n            }\n          }\n        }\n\n        function canCreateGroup() {\n          const candidate = newControlsConfig[key];\n\n          return (\n            candidate &&\n            !Array.isArray(candidate) &&\n            candidate.constructor &&\n            typeof candidate === 'object' &&\n            (candidate.length === undefined ||\n              (candidate.length !== undefined &&\n                Object.keys(candidate).length === candidate.length))\n          );\n        }\n\n        function canCreateArray() {\n          if (Array.isArray(newControlsConfig[key]) === false) {\n            return false;\n          }\n\n          const candidate = newControlsConfig[key][0];\n\n          return (\n            candidate.constructor &&\n            typeof candidate === 'object' &&\n            (candidate.length === undefined ||\n              (candidate.length !== undefined &&\n                Object.keys(candidate).length === candidate.length))\n          );\n        }\n      });\n    }\n\n    // Remove empty\n    validators = validators && validators.filter(validator => validator);\n    asyncValidators =\n      asyncValidators && asyncValidators.filter(validator => validator);\n\n    // Create an Angular group from the top-level object\n    const classValidators = getClassValidators<TModel>(\n      factoryModel,\n      newControlsConfig,\n      extra && extra.customValidatorOptions,\n      this.FormControlClass\n    );\n    const formGroup = super.group(classValidators, {\n      ...(asyncValidators || {}),\n      ...(updateOn || {}),\n      ...(validators || {})\n    });\n\n    // Initialize the resulting group\n    // Changed from internal FormGroup to DynamicFormGroup\n    const dynamicFormGroup = new DynamicFormGroup<TModel>(\n      factoryModel,\n      newControlsConfig,\n      {\n        asyncValidators,\n        updateOn,\n        validators\n      } as any\n    );\n\n    // Add all angular controls to the resulting dynamic group\n    Object.keys(formGroup.controls).forEach(key => {\n      dynamicFormGroup.addControl(key, formGroup.controls[key]);\n    });\n\n    // Add a listener to the dynamic group for value changes; on change, execute validation\n    dynamicFormGroup.valueChanges.subscribe(() => dynamicFormGroup.validate(undefined, extra && extra.customValidatorOptions));\n\n    return dynamicFormGroup;\n  }\n\n  // *******************\n  // Helpers\n\n  /**\n   * Recursively creates an empty object from the data provided\n   */\n  private createEmptyObject<TModel>(\n    factoryModel: ClassType<TModel>,\n    data: {[key: string]: any} = {}\n  ): any {\n    let modified = false;\n\n    const object: any = factoryModel ? plainToClass(factoryModel, data) : data;\n    const fields = Object.keys(object);\n\n    fields.forEach((fieldName: any) => {\n      if (object[fieldName] && object[fieldName].length !== undefined) {\n        if (\n          object[fieldName].length === 1 &&\n          Object.keys(object[fieldName][0]).length > 0 &&\n          object[fieldName][0].constructor\n        ) {\n          object[fieldName] = [\n            this.createEmptyObject(object[fieldName][0].constructor)\n          ];\n        }\n\n        if (object[fieldName].length === 0) {\n          data[fieldName] = [{}];\n          modified = true;\n        }\n      } else {\n        data[fieldName] = undefined;\n      }\n    });\n\n    if (modified) {\n      return this.createEmptyObject(factoryModel, data);\n    }\n\n    return object;\n  }\n}\n"],"names":["isNullOrUndefined","tslib_1.__extends","MetadataKeys","FormControl","BehaviorSubject","Subject","FormBuilder","getFormFieldsOptions","validate","FormArray","classToClass","plainToClass","FormGroup","getFromContainer","MetadataStorage","Validator","ValidationTypes","validateSync","tslib_1.__assign"],"mappings":"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"}